[MASTER]
- Add fifths/byFifths to sort collections by fifths distance
- Add fifths/fifths to calculate distances in fifths between two pitch classes
- Add fifths module
- Add set/genericSet
- Add set/binarySets
- Rename set/binaryIntervals to set/fromBinary
- Add internal/findByValue and refactor scale/name
- interval/interval now accepts quality as second parameter

[0.8.0]
- Rename pitch/pitch to pitch/build
- Add utils/prop
- Using utils/prop add pitch/octave pitch/midi pitch/pitchClass
- Rename interval/interval to interval/build
- Create utils/toArray
- Rename scale/intervals to scale/generic
- Remove sequence/reverse and sequence/retrograde
- Move sequence/cycle to incubator
- Tonal object facade
- Move sequence/harmonize to interval/harmonize
- Move pitchSet to set
- Move binary-scale functions into set
- Rename pitch property sci to str
- interval/build only builds an string and renamed to interval/interval
- pitch/build only builds an string and renamed to pitch/pitch
- rename utils to internal to explicit the use case of those functions
- change pitch/pitch function signature to match the order of components in the string
- change interval/interval function signature to match the order of components in the string
- add pitch/letter and scale/triad
- don't use Uint8Array for compatibility
- scales and chords uses internal/lookup and internal/keys
- new function chord/names
- incubator/cycle now returns a pitch set
- move scale/triadic to incubator
- add pitch/key and pitch/fromKey
- add pitch/fromFreq function
- add pitch/cents
- move pitch/distance to pitch/interval
- add pitch/intervalTo and pitch/intervalFrom
- interval/props and pitch/props now returns an immutable object (via Object.freeze)
- interval/interval can receive a negative octave number

[0.7.0]
- Last iteration without changelog ;-)
